{
    "Arrows function": {
        "prefix": "af",
        "body": [
            "(${1})=>{",
            "\t${2}",
            "}"
        ],
        "description": "Arrows function"
    }
    ,"console.log();" : {
        "prefix": "log",
        "body": [
            "console.log(${1});"
        ],
        "description": "console.log();"
    }
    ,"Node Md Test" : {
        "prefix": "nodetest",
        "body": [
            "",
            "///////////////////////////////////////////////////////////////////",
            "",
            "if(!module.parent) {(function () {",
            "   var assert = require('assert');",
            "   var oArgs = {",
            "       ",
            "   };",
            "",
            "   var oC = module.exports.call('test', oArgs);",
            "   oC._init();",
            "   console.log(oC);",
            "",
            "})();}"
        ],
        "description": "!module.parent test"
    }
    ,"_class" : {
        "prefix": "_class",
        "body": [
            "var Class = (function () {",
            "\tvar _pub_static = function () {var _pub = {}, _pri = {}, _pro = {};",
            "\t\tvar _init = function () {",
            "\t\t\t",
            "\t\t\t",
            "\t\t};",
            "",
            "\t\t",
            "",
            "\t\tswitch(this+'') {",
            "\t\t\tcase 'test':",
            "\t\t\t\t_pub._pri = _pri;",
            "\t\t\tcase 'extend':",
            "\t\t\t\t_pub._pro = _pro;",
            "\t\t\t\t_pub._init = _init;",
            "\t\t\t\tbreak;",
            "\t\t\tdefault:",
            "\t\t\t\tdelete _pub._init;",
            "\t\t\t\tdelete _pub._pro;",
            "\t\t\t\t_init.apply(_pub, arguments);",
            "\t\t}",
            "\t\treturn _pub;",
            "\t};",
            "",
            "\t",
            "",
            "\treturn _pub_static;",
            "}());"
        ],
        "description": "_class"
    }
    ,"else" : {
        "prefix": "else",
        "body": [
            "else{",
            "    ${1}",
            "}"
        ],
        "description": "else"
    }
    ,"_fun" : {
        "prefix": "_fun",
        "body": [
            "(function () {",
            "   var _fun = function () {",
            "       ",
            "   };",
            "",
            "   ",
            "",
            "   return _fun;",
            "}());"
        ],
        "description": "_fun"
    }
    ,"Anonymous function exec" : {
        "prefix": "ae",
        "body": [
            "(function () {",
            "   ${1}",
            "})();"
        ],
        "description": "Anonymous function exec"
    }
    ,"for object" : {
        "prefix": "forof",
        "body": [
            "Object.keys(${1:obj}).forEach(function (k, i, v) {v = ${1}[k];",
            "\t$0",
        ],
        "description": "for object"
    }
    ,"setState" : {
        "prefix": "ss",
        "body": [
			"setState({",
			"\t${1}",
			"});",
        ],
        "description": "setState"
    }
	,"For-Filter Loop": {
		"prefix": "filter",
		"body": [
			"filter(function(${2:o}) {",
			"\t$0",
			"})${1}"
		],
		"description": "For-Filter Loop"
	}
	,"For-Map Loop": {
		"prefix": "map",
		"body": [
			"map(function(${2:o}) {",
			"\t$0",
			"})${1}"
		],
		"description": "For-Map Loop"
	}
	,"For-Some Loop": {
		"prefix": "some",
		"body": [
			"some(function(${2:o}) {",
			"\t$0",
			"})${1}"
		],
		"description": "For-Some Loop"
	}
	,"For-Every Loop": {
		"prefix": "every",
		"body": [
			"every(function(${2:o}) {",
			"\t$0",
			"})${1}"
		],
		"description": "ForEvery Loop"
	}
	,"For-Reduce Loop": {
		"prefix": "reduce",
		"body": [
			"reduce(function(p, ${2:o}) {",
			"\t$0",
			"})${1}"
		],
		"description": "ForReduce Loop"
	}
	,"Object.keys": {
		"prefix": "keys",
		"body": [
			"Object.keys($0)"
		],
		"description": "Object.keys"
	}
	,"Object.assign": {
		"prefix": "assign",
		"body": [
			"Object.assign($0)"
		],
		"description": "Object.assign"
	,"Cace Item": {
		"prefix": "case",
		"body": [
			"case $1:",
			"\t$0",
			"\tbreak;"
		],
		"description": "Cace Item"
	}

}

